name: Pull Request Review
on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  STACK_NAME: LC
  STAGE: DEV
  NODE_OPTIONS: '--max_old_space_size=4096'
  S3_STORAGE_REPLICATION_REGIONS: 'ap-southeast-1,us-west-2,eu-west-1'
  AWS_REGION: 'eu-west-1'
  RESOURCE_REGION: 'eu-west-1'

jobs:
  build:
    name: Build & Test
    outputs:
      status: ${{ job.status }}
      ref: ${{ steps.setoutputs.outputs.ref }}
    runs-on: ubuntu-latest
    environment: DEV
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Build
        run: yarn ci

      - name: Check Linting
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: yarn lint

      - name: Build & Execute Unit Test & Coverage
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          RESOURCE_REGION: eu-west-1
          AWS_DEFAULT_REGION: eu-west-1
        run: |
          yarn test --verbose false --silent true
          yarn test:cov --verbose false --silent true

      - name: Set outputs
        id: setoutputs
        shell: bash
        run: |
          ref=$(echo $GITHUB_REF | sed 's/refs\/pull\///g;s/\/merge//g')
          echo "::set-output name=ref::${ref}"

  notify:
    name: Slack Notification
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ needs.build.outputs.status }}
          SLACK_FOOTER: ""
          SLACK_ICON: ""
          SLACK_TITLE: ""
          SLACK_CHANNEL: lincloud-noti
          SLACK_USERNAME: "PR Review"
          MSG_MINIMAL: "actions url,commit"
          SLACK_MESSAGE: |
            Review on PR <https://github.com/LinearityGmbH/LinCloud-BE/pull/${{ needs.build.outputs.ref }}|${{ needs.build.outputs.ref }}>
